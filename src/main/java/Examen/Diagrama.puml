@startuml
package Examen {
    interface AccionesAsistentes {
        +void aplaudir()
        +void alfombraRoja()
        +void darDiscurso(String tematica)
        +void celebrarPremio(Premio premio)
    }

    abstract class MutxaAwards {
        -int edicion
        +abstract void obtenerDetalles()
    }

    class Artista extends MutxaAwards implements AccionesAsistentes {
        -String nombre
        -ArrayList<Premio> listaPremios
        -ArrayList<Categoria> categorias
        +Artista(String nombre, int edicion)
        +void esNominado(Categoria categoria)
        +void ganarPremio(Premio premio)
        +void recogerPremio(Premio premio)
        +void aplaudir()
        +void alfombraRoja()
        +void darDiscurso(String tematica)
        +void celebrarPremio(Premio premio)
        +void obtenerDetalles()
    }

    class Presentador extends MutxaAwards implements AccionesAsistentes {
        -String nombre
        +Presentador(String nombre, int edicion)
        +void presentar()
        +void entregarPremio(Premio premio)
        +void aplaudir()
        +void alfombraRoja()
        +void darDiscurso(String tematica)
        +void celebrarPremio(Premio premio)
        +void obtenerDetalles()
    }

    class Premio {
        -Categoria categoria
        -Artista ganador
        +Premio(Categoria categoria, Artista ganador)
        +String toString()
    }

    enum Categoria {
        MEJOR_PELICULA
        MEJOR_DIRECTOR
        MEJOR_ACTOR
        MEJOR_ACTRIZ
        MEJOR_GUION
    }

    Premio --> Artista
}
@enduml